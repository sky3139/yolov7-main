import json
import cv2

def init():       # 模型初始化
    model = "您的深度学习模型"  ###开发者需要自行设计深度学习模型
    return model

def process_image(net, input_image, args=None):   
    dets = net(input_image)  
    '''
        假如 dets数据为
        dets = [['pedestrian', '0', '0', '1.9921350550721388', '783.46228', '256.193909', '807.102356', '305.991242', '1.501095', '0.443502', '0.599597', '-6.30840572763', '-7.24883889889', '74.6925154711', '1.90787668151'], 
                ['car', '0', '0', '-1.4957292038451553', '1513.208984', '221.756866', '1582.604248', '285.019531', '1.138008', '1.533378', '4.259202', '15.9548793918', '-6.77630765403', '61.575159005', '-1.24219284167'], 
                ['car', '0', '1', '1.819301750914212', '1047.92334', '258.272095', '1138.018677', '326.640473', '1.201635', '1.402634', '4.360323', '3.16898439105', '-5.66824359768', '61.0786524493', '1.87113893629']]
        数据含义与数据集中标注含义一致
       * 如需，可以在args参数中获取calib等参数文件，返回内容为文件路径：
            args = json.loads(args)
            calib = args.get('calib')
            denorm = args.get('denorm')
            extrinsics = args.get('extrinsics')
            depth = args.get('depth')
    '''
    result = {"model_data": {"objects": dets}}
    return json.dumps(result)

if __name__ == '__main__':
    predictor = init()
    original_image = cv2.imread('xxx.jpg')   # 读取图片
    result = process_image(predictor, original_image)
    print(result)

'''
ev_sdk输出json样例
{
"model_data": {
    "objects": [
        [
            "pedestrian",
            "0",
            "0",
            "1.9921350550721388",
            "783.46228",
            "256.193909",
            "807.102356",
            "305.991242",
            "1.501095",
            "0.443502",
            "0.599597",
            "-6.30840572763",
            "-7.24883889889",
            "74.6925154711",
            "1.90787668151"
        ],
        [
            "car",
            "0",
            "0",
            "-1.4957292038451553",
            "1513.208984",
            "221.756866",
            "1582.604248",
            "285.019531",
            "1.138008",
            "1.533378",
            "4.259202",
            "15.9548793918",
            "-6.77630765403",
            "61.575159005",
            "-1.24219284167"
        ],
        [
            "car",
            "0",
            "1",
            "1.819301750914212",
            "1047.92334",
            "258.272095",
            "1138.018677",
            "326.640473",
            "1.201635",
            "1.402634",
            "4.360323",
            "3.16898439105",
            "-5.66824359768",
            "61.0786524493",
            "1.87113893629"
        ]
    ]
    }
}
'''